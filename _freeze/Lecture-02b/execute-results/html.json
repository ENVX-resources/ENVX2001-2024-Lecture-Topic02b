{
  "hash": "080a6dbb9b79fcdad6a27a5fb10cdc33",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Lecture 02b -- Sampling designs II\nsubtitle: ENVX2001 Applied Statistical Methods\nauthor: Dr. Januar Harianto \ninstitute: The University of Sydney\ndate: last-modified # today | last-modified\ndate-format: \"MMM YYYY\"\nexecute:\n  cache: false\n  echo: true\neditor-options:\n  canonical: true\ntoc: true\ntoc-depth: 1\ntoc-title: Outline\n---\n\n\n# In the last lecture...\n\n\n\n## Simple random sampling {auto-animate=true}\n![](images/simple_random.png)\n\n::: fragment\n**Each unit has an equal chance of being selected.**\n:::\n\n::: fragment\n### Not *always* the case, but still a good technique.\n:::\n\n\n\n## Simple random sampling {auto-animate=true}\n**Each unit has an equal chance of being selected.**\n\n### Not *always* the case, but still a good technique.\n\n::: fragment\nBut what if we have more information about the population?\n:::\n\n::: fragment\n:::: {.columns}\n::: {.column width=\"50%\"}\n### Soil carbon\n![](images/datastory.png)\n:::\n\n::: {.column width=\"50%\"}\n::: fragment\n### Different land types\n::: incremental\n- Land type A covers 62% of the area, and land type B covers 38%.\n- Type A has a **higher** chance of being selected if we use simple random sampling.\n- **Can we use this information to our advantage?**\n:::\n:::\n\n:::\n::::\n:::\n\n\n# ~~Simple~~ Stratified random sampling\n## Stratified random sampling\n\n### 3 steps\n\n::: incremental\n1. **Divide** the population into **homogeneous** subgroups (strata).\n2. **Sample** from each stratum using simple random sampling.\n3. **Pool** (or **combine**) the estimates from each stratum to get an overall population estimate.\n:::\n\n## Strata rules \n\n### Strata are...\n\n::: incremental\n- **Mutually exclusive** and **collectively exhaustive**; i.e. units must *all* belong to a stratum and *only* to one stratum (no unit should be unassigned).\n- **Homogeneous** -- units within a stratum are similar to each other and distinct from units in other strata.\n- **Sampled irrespective of size** -- the point is to ensure that each stratum is represented in the final sample.\n:::\n\n::: fragment\n![](images/stratified.png){style=\"width: 60%;\" fig-align=\"center\"}\n:::\n\n:::fragment\n### Identifying strata\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n#### Acceptable\n**Age groups** or **income brackets** -- these are mutually exclusive and homogeneous.\n:::\n\n::: {.column width=\"50%\"}\n#### Might not work...\n**Nationality** or **food preference** -- these may not be mutually exclusive e.g. a person can have multiple nationalities, or animals can have multiple food preferences.\n:::\n::::\n:::\n\n## Advantages\n\n### We address:\n\n::: incremental\n- **Bias**. Each stratum is sampled, so the sample is representative of the population.\n- **Accuracy**. Each stratum is represented by a minimum number of sampling units.\n- **Insight**. We can compare strata and make inferences about the population.\n:::\n\n:::fragment\n### Does this make simple random sampling obsolete?\n\n::: incremental\n- **No**. *Still* a good technique.\n- With large enough samples, the two methods will converge.\n- Chance of *not* selecting a unit from a stratum is always there, but reduces as the sample size increases.\n:::\n:::\n\n# Stratified random sampling: estimates\n\n## Everything is the same, but...\n\n### Weighted estimates\n\n- We need to \"weigh\" the estimates from each stratum to account for the different stratum sizes and inclusion probabilities.\n- Most of the time, we use the stratum size as the weight to calculate **weighted estimates**.\n- The *overall* population estimate is the sum of the weighted estimates from each stratum, i.e. we *pool the individual strata information into a single, overall population estimate*.\n\n::: fragment\n### Example\n::: incremental\n\n- A forest contains two types of trees: A and B, with 60% and 40% of the population, respectively.\n- We want to estimate the **mean height** of the trees.\n- Take **10** height measurements, of which 7 are randomly selected from type A and 3 are randomly selected from type B.\n- The **pooled estimate** for the *mean height* of the trees is: $$0.6 \\times \\text{average height of A} + 0.4 \\times \\text{average height of B}$$\n:::\n:::\n\n# Data story: soil carbon\n\n\n## Soil carbon\n:::: {.columns}\n::: {.column width=\"50%\"}\n### Data story\n\n![](images/datastory.png)\n\nSoil carbon content was measured at 7 locations across the area. The amount at each location was 48, 56, 90, 78, 86, 71, 42 tonnes per hectare (t/ha).\n:::\n\n::: {.column width=\"50%\"}\n::: fragment\n### Different land types\n- Land type A covers 62% of the area, and land type B covers 38%.\n- Type A has a **higher** chance of being selected if we use simple random sampling.\n- **Can we use this information to our advantage?**\n\n### In R\n\nSuppose we know the land type for each location sampled. We can use this information to sample the data from each land type according to stratum size.\n\n(Coincidentally the sampling effort and data are the same as the simple random sampling example from the previous lecture.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlandA <- c(90, 78, 86, 71)  # stratum A samples\nlandB <- c(48, 56, 42)      # stratum B samples\n```\n:::\n\n:::\n:::\n::::\n\n## 95 % Confidence interval\n\n### The formula\n$$95\\%\\ CI = \\bar y_{s} \\pm t^{0.025}_{n-L} \\times SE(\\bar y_{s})$$\n\nwhere $L$ is the number of strata, $n$ is the total number of samples, and $\\bar y_{s}$ is the weighted mean of the strata. \n\n**Therefore:**\n\n::: incremental\n- $\\bar y_{s}$ is the pooled mean.\n- $t^{0.025}_{n-L}$ is the $t$-value for a 95% confidence interval with $n-L$ degrees of freedom.\n- $SE(\\bar y_{s})$ is the pooled standard error of the mean.\n:::\n\n## Pooled mean $\\bar y_{s}$\n\n> **Sum** of the weighted estimates of mean, from each stratum.\n\n::: fragment\n$$\\bar{y}_{s} = \\sum_{i=1}^L \\bar{y}_i \\times w_i$$\n\nwhere $L$ is the number of strata, $\\bar{y}_i$ is the mean of stratum $i$, and $w_i$ is the weight for stratum $i$.\n:::\n\n::: fragment\nWe first define the weights $w_i$ for each stratum:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweight <- c(0.62, 0.38)\n```\n:::\n\n:::\n\n::: fragment\nThen we calculate the weighted mean by multiplying the mean of each stratum by the weight and summing the results:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweighted_mean <- mean(landA) * weight[1] + mean(landB) * weight[2]\nweighted_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68.86833\n```\n\n\n:::\n:::\n\n:::\n\n## Pooled standard error of the mean $SE(\\bar y_{s})$\n\n> **Square root** of the sum of the weight-adjusted variances of the mean per stratum, **assuming the strata are independent** (see next slide).\n\n::: fragment\n$$Var(\\bar y_{s}) = \\sum_{i=1}^L w_i^2 \\times Var(\\bar y_i)$$\n$$SE(\\bar y_{s}) = \\sqrt{Var(\\bar y_{s})}$$\n\nwhere $L$ is the number of strata, $w_i$ is the weight for stratum $i$, and $Var(\\bar y_i)$ is the variance of the mean for stratum $i$.\n:::\n\n::: fragment\n### In R\n\n::: {.cell}\n\n```{.r .cell-code}\nvarA <- var(landA) / length(landA)\nvarB <- var(landB) / length(landB)\nweighted_var <- weight[1]^2 * varA + weight[2]^2 * varB\nweighted_se <- sqrt(weighted_var)\nweighted_se\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.041995\n```\n\n\n:::\n:::\n\n:::\n\n## Pooled standard error of the mean $SE(\\bar y_{s})$\n### Why is weight $w$ squared?\nVariance is standard deviation squared, therefore the weight is naturally squared when calculating the variance of the weighted mean. We just don't see it unless we *expand* the variance formula i.e. *\"it's a math thing\".*\n\n::: fragment\n### Can we really add variances?\nYes, if sampling units are *all independent*, which should be the case for a well-designed stratified random sampling since units are mutually exclusive and collectively exhaustive.\n\nThe addition or subtraction of variances include a **covariance term** if the strata are not independent:\n\n$$ Var(\\bar y_{s}) = \\sum_{i=1}^L w_i^2 \\times Var(\\bar y_i) + 2 \\times \\sum_{i=1}^L \\sum_{j=1}^L w_i \\times w_j \\times Cov(\\bar y_i, \\bar y_j)$$\n:::\n\n::: fragment\n\n![](images/wtfmouth.gif){style=\"width: 15%;\" fig-align=\"center\"}\n\n:::\n\n## $t$-critical value\n### Degrees of freedom $df$\n\n$$df = n - L$$\n\nwhere $n$ is the total number of samples and $L$ is the number of strata.\n\n::: fragment\n- Suppose we want to assign 12 samples to 3 strata.\n- The degrees of freedom is $12 - 3 = 9$.\n- Think of it this way: of all the 12 samples, we can assign at least 9 units freely into any stratum, but the last 3 *must* be in *each* of the 3 strata.\n:::\n\n::: fragment\n### In R\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- length(landA) + length(landB) - 2\nt_crit <- qt(0.975, df)\nt_crit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.570582\n```\n\n\n:::\n:::\n\n\n:::\n\n## 95 % Confidence interval\n\n### Putting it all together\n\n\n::: {.cell}\n\n```{.r .cell-code}\nci <- c(\n  L95 = weighted_mean - t_crit * weighted_se,\n  u95 = weighted_mean + t_crit * weighted_se\n)\nci\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     L95      u95 \n61.04864 76.68803 \n```\n\n\n:::\n:::\n\n\n# Comparison\n\n## Simple random vs. stratified random sampling\n\nWhat if we had use stratified random sampling instead of simple random sampling (and collected the same amount of data)?\n\n### What differences can you see?\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\n# Manually printing the results below as SRS data is in previous lecture\ncompare <- tibble(\n  Design = c(\"Simple Random\", \"Stratified Random\"),\n  Mean = c(67.29, 68.9), \n  `Var (mean)` = c(50.83, 9.30),\n  L95 = c(49.85, 61), \n  U95 = c(84.73, 76.7), \n  df = c(6, 5))\nknitr::kable(compare)\n```\n\n::: {.cell-output-display}\n\n\n|Design            |  Mean| Var (mean)|   L95|   U95| df|\n|:-----------------|-----:|----------:|-----:|-----:|--:|\n|Simple Random     | 67.29|      50.83| 49.85| 84.73|  6|\n|Stratified Random | 68.90|       9.30| 61.00| 76.70|  5|\n\n\n:::\n:::\n\n\n::: incremental\n- Differences in mean, variance of the mean and 95% CI?\n- Which method is more precise?\n- *Can simple random sampling be as precise as stratified random sampling?*\n:::\n\n## Efficiency\n\n- Calculated as a ratio:\n  $$\\text{Efficiency} = \\frac{\\text{Variance of SRS}}{\\text{Variance of Stratified}}$$\n- Indicates sampling effort required to achieve precision of stratified sampling.\n- Efficiency > 1 means stratified sampling is more efficient.\n- Value tells us how much we need to increase the sample size in SRS to achieve the same precision as stratified sampling.\n\n### In R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nefficiency <- 50.83 / 9.30\nefficiency\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.465591\n```\n\n\n:::\n:::\n\n\nHow many samples would we have had to collect in SRS, to achieve the same precision as stratified sampling?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(7 * efficiency, 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 38\n```\n\n\n:::\n:::\n\n\n## Tips on implementation\n\n- The most difficult part is to **identify** the strata and **assign** the sampling units to the strata.\n- **Strata sampling size**: allocate samples to strata based on the size of the strata, either proportional to:\n  - the size of the strata, or\n  - the variance of the strata.\n  \n# Monitoring\nWhat if we come back and do another set of soil carbon measurements?\n\n## The change in mean $\\Delta \\bar y$\n\n- Our interest now lies in the change in mean soil carbon content.\n- We can still calculate the 95% confidence interval for the change in mean, but we need to account for the *correlation* between the two sets of measurements.\n- A **covariance** problem that differs depending on the resampling design.\n\n## Monitoring estimates\n\n### Change in mean $\\Delta \\bar y$\n\n> The difference between the means of the two sets of measurements.\n\n$$\\Delta \\bar y = \\bar y_2 - \\bar y_1$$\n\nwhere $\\bar y_2$ and $\\bar y_1$ are the means of the second and first set of measurements, respectively.\n\n::: fragment\n### Variance *of the change in mean* $Var(\\Delta{\\bar y})$\n\n> Sum of the variances of the two sets of measurements, minus twice the covariance between the two sets of measurements **if the two sets are not independent**. The covariance term is zero if the two sets are independent.\n\n$$Var(\\Delta{\\bar y}) = Var(\\bar y_2) + Var(\\bar y_1) - 2 \\times Cov(\\bar y_2, \\bar y_1)$$\n:::\n\n## Covariance?\n\n### If we revisit the same 7 sites\n\n$$Var(\\Delta{\\bar y}) = Var(\\bar y_2) + Var(\\bar y_1) - 2 \\times Cov(\\bar y_2, \\bar y_1)$$\n\n- The measurements are not independent, as anything that affects the first set of measurements will also affect the second set (unknown to us).\n- Covariance exists between the two sets of measurements.\n- We need to account for this in the variance of the change in mean.\n- Equivalent to a **paired t-test**.\n\n### If we visit 7 randomly-selected sites\n\n$$Var(\\Delta{\\bar y}) = Var(\\bar y_2) + Var(\\bar y_1)$$\n\n- The measurements are independent.\n- Covariance is zero.\n- Equivalent to a **two-sample t-test**.\n\n## Calculating the 95% CI for the change in mean\n\n$$95\\%\\ CI = \\Delta \\bar y \\pm t^{0.025}_{n-1} \\times SE(\\Delta \\bar y)$$\n\nwhere $n$ is the number of pairs of measurements, and $SE(\\Delta \\bar y)$ is the standard error of the change in mean.\n\n::: fragment\n### $SE(\\Delta \\bar y)$\nIf the covariance term is needed, we calculate covariance as:\n\n$$Cov(\\bar y_2, \\bar y_1) = \\frac{\\sum_{i=1}^n (y_{2i} - \\bar y_2) \\times (y_{1i} - \\bar y_1)}{n-1}$$\n\nwhere $n$ is the number of pairs of measurements, and $y_{2i}$ and $y_{1i}$ are the measurements from the second and first set, respectively.\n\n> The sum of the product of the differences between each pair of measurements and the mean of each set, divided by $n-1$.\n:::\n\n::: fragment\n**Luckily, you are not expected to calculate this by hand.** R will do it for you either by using the `cov()` function (if calculating manually), or by using the `t.test()` function with the `paired` argument set to `TRUE`. We will go through this in the lab!\n:::\n\n\n\n## Thanks!\n### Questions?\nThis presentation is based on the [SOLES Quarto reveal.js template](https://github.com/usyd-soles-edu/soles-revealjs) and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by].\n\n[cc-by]: http://creativecommons.org/licenses/by/4.0/\n",
    "supporting": [
      "Lecture-02b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}